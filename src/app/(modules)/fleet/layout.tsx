import type { Metadata } from "next";
// import { Inter } from 'next/font/google';
import MainRoot from "./_components/layout/MainRoot";
import {
  Car,
  UserCog,
  Settings,
  WrenchIcon,
  // RadioTower,
  // Receipt,
  // FileText,
  Fuel,
  BarChart,
  Users
} from 'lucide-react';
interface Navigation {
  href: string;
  icon: React.ReactNode;
  label: string;
}

const navigations: Navigation[] = [
  {
    href: '/fleet',
    icon: <Settings color="black" size={20} />,
    label: 'Dashboard',
  },
  {
    href: '/fleet/fleet-setup',
    icon: <Car color="black" size={20} />,
    label: 'Fleet Setup',
  },
  {
    href: '/fleet/drivers',
    icon: <UserCog color="black" size={20} />,
    label: 'Driver Management',
  },
  {
    href: '/fleet/operation-management',
    icon: <Car color="black" size={20} />,
    label: 'Fleet Operations Management',
  },
  {
    href: '/fleet/maintenace-repair',
    icon: <WrenchIcon color="black" size={20} />,
    label: 'Fleet Maintenance and Repairs',
  },
  // {
  //   href: '/fleet/monitoring',
  //   icon: <RadioTower color="black" size={20} />,
  //   label: 'Fleet Monitoring and Telemetry',
  // },
  // {
  //   href: '/fleet/expenses',
  //   icon: <Receipt color="black" size={20} />,
  //   label: 'Fleet Expenses Management',
  // },
  // {
  //   href: '/fleet/compliance',
  //   icon: <FileText color="black" size={20} />,
  //   label: 'Compliance and Documentation',
  // },
  {
    href: '/fleet/customers',
    icon: <Users color="black" size={20} />,
    label: 'Customers',
  },
  {
    href: '/fleet/fuel',
    icon: <Fuel color="black" size={20} />,
    label: 'Fuel & Energy',
  },
  {
    href: '/fleet/reporting',
    icon: <BarChart color="black" size={20} />,
    label: 'Reporting and Analytics',
  },
];

// const primaryFont = Inter({
//   display: 'swap',
//   subsets: ['latin'],
//   variable: '--font-primary',
// });


export const metadata: Metadata = {
  title: "Dreamworks Logistics Company",
  description: "Generated by create next app",
};

export default function AdminLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {   
  return (
    <MainRoot navigation={navigations}>
         {children}
         </MainRoot>
    
  );
}